def createframe_i(interpret, instruction):
    interpret.tmp_frame = {}


def pushframe_i(interpret, instruction):
    if interpret.tmp_frame is None:
        exit(55)
    interpret.frame_stack.append(interpret.tmp_frame)
    interpret.tmp_frame = None


def popframe_i(interpret, instruction):
    if len(interpret.frame_stack) == 0:
        exit(55)
    interpret.tmp_frame = interpret.frame_stack.pop()


def return_i(interpret, instruction):
    ...
def break_i(interpret, instruction):
    ...
def defvar_i(interpret, instruction):
    ...
def call_i(interpret, instruction):
    ...
def pushs_i(interpret, instruction):
    ...
def pops_i(interpret, instruction):
    ...
def write_i(interpret, instruction):
    ...
def label_i(interpret, instruction):
    ...
def jump_i(interpret, instruction):
    ...
def exit_i(interpret, instruction):
    ...
def dprint_i(interpret, instruction):
    ...
def move_i(interpret, instruction):
    ...
def not_i(interpret, instruction):
    ...
def int2char_i(interpret, instruction):
    ...
def read_i(interpret, instruction):
    ...
def strlen_i(interpret, instruction):
    ...
def type_i(interpret, instruction):
    ...
def add_i(interpret, instruction):
    ...
def sub_i(interpret, instruction):
    ...
def mul_i(interpret, instruction):
    ...
def idiv_i(interpret, instruction):
    ...
def lt_i(interpret, instruction):
    ...
def gt_i(interpret, instruction):
    ...
def eq_i(interpret, instruction):
    ...
def and_i(interpret, instruction):
    ...
def or_i(interpret, instruction):
    ...
def str2int_i(interpret, instruction):
    ...
def concat_i(interpret, instruction):
    ...
def getchar_i(interpret, instruction):
    ...
def setchar_i(interpret, instruction):
    ...
def jumpifeq_i(interpret, instruction):
    ...
def jumpifneq_i(interpret, instruction):
    ...
